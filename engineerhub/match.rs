fn main() {
    // `match 値 {パターン => 処理, ..}` の形で書く。
    match 10 {
        // リテラルへのマッチ
        0 => println!("0"),
        // レンジパターンが書ける。
        1..10 => println!("small number"),
        // 変数パターンで受けると残りの可能性すべてを受け、変数をその値に束縛する。
        n => println!("big number: {}", n),
    }

    match (1.0, 1) {
        // タプルパターンでタプルを分解できる。さらにパターンの入れ子もできる。
        (0.0, 0) => println!("all zero"),
        // 部分的に変数パターンを使うこともできる。
        (f, 0..10) => println!("float: {} with small number", f),
        // もちろん丸ごと変数で受け取ることもできる。
        // 値を特に使わないのであれば特別なパターン`_`を使うことで無視できる。
        _ => println!("other tuple"),
    }
}